<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>crystal-cluster</artifactId>
        <groupId>com.ai.mine.crystal</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>crystal-cluster-server</artifactId>

    <dependencies>
        <!-- 引入dubbo服务的api定义 -->
        <dependency>
            <groupId>com.ai.mine.crystal</groupId>
            <artifactId>crystal-cluster-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- 引入框架包验证码服务 -->
        <dependency>
            <groupId>com.ai.woego.boot</groupId>
            <artifactId>captcha-engine-spring-boot-autoconfigure</artifactId>
        </dependency>

        <!-- 引入mine框架自己定义的security模块，实现用户身份认证和权限控制 -->
        <dependency>
            <groupId>com.ai.mine</groupId>
            <artifactId>mine-security</artifactId>
        </dependency>
        <!-- pagehelper分页插件 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
        </dependency>
        <!-- 引入druid自动配置模块 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <!-- 引入数据库驱动：MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- thymeleaf 框架开发传统MVC模式的web页面 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- 这是一个Web应用 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--webjars 依赖，视情况而定要不要加上-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- spring-boot项目打包插件，打包出fatjar以便直接部署 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
